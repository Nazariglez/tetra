//! This module contains the types used by Tetra to represent input devices.
//! To avoid exposing implementation details (and to just generally give a better API),
//! we use our own types instead of re-exporting SDL's.
//!
//! It's a seperate module because it's hecking long.

use sdl2::controller::{Axis as SdlAxis, Button as SdlButton};
use sdl2::keyboard::Keycode as SdlKey;
use sdl2::mouse::MouseButton as SdlMouseButton;

/// A key on a player's keyboard.
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
#[allow(missing_docs)]
pub enum Key {
    A,
    AcBack,
    AcBookmarks,
    AcForward,
    AcHome,
    AcRefresh,
    AcSearch,
    AcStop,
    Again,
    AltErase,
    Ampersand,
    Application,
    Asterisk,
    At,
    AudioMute,
    AudioNext,
    AudioPlay,
    AudioPrev,
    AudioStop,
    B,
    Backquote,
    Backslash,
    Backspace,
    BrightnessDown,
    BrightnessUp,
    C,
    Calculator,
    Cancel,
    CapsLock,
    Caret,
    Clear,
    ClearAgain,
    Colon,
    Comma,
    Computer,
    Copy,
    CrSel,
    CurrencySubUnit,
    CurrencyUnit,
    Cut,
    D,
    DecimalSeparator,
    Delete,
    DisplaySwitch,
    Dollar,
    DoubleQuote,
    Down,
    E,
    Eject,
    End,
    Enter,
    Enter2,
    Equals,
    Escape,
    ExSel,
    ExclamationMark,
    Execute,
    F,
    F1,
    F10,
    F11,
    F12,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F2,
    F20,
    F21,
    F22,
    F23,
    F24,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    Find,
    G,
    GreaterThan,
    H,
    Hash,
    Help,
    Home,
    I,
    IllumDown,
    IllumToggle,
    IllumUp,
    Insert,
    J,
    K,
    Keypad0,
    Keypad00,
    Keypad000,
    Keypad1,
    Keypad2,
    Keypad3,
    Keypad4,
    Keypad5,
    Keypad6,
    Keypad7,
    Keypad8,
    Keypad9,
    KeypadA,
    KeypadAmpersand,
    KeypadAt,
    KeypadB,
    KeypadBackspace,
    KeypadBinary,
    KeypadC,
    KeypadClear,
    KeypadClearEntry,
    KeypadColon,
    KeypadComma,
    KeypadD,
    KeypadDecimal,
    KeypadDivide,
    KeypadDoubleAmpersand,
    KeypadDoubleVerticalBar,
    KeypadE,
    KeypadEnter,
    KeypadEquals,
    KeypadEqualsAS400,
    KeypadExclamationMark,
    KeypadF,
    KeypadGreater,
    KeypadHash,
    KeypadHexadecimal,
    KeypadLeftBrace,
    KeypadLeftParen,
    KeypadLess,
    KeypadMemAdd,
    KeypadMemClear,
    KeypadMemDivide,
    KeypadMemMultiply,
    KeypadMemRecall,
    KeypadMemStore,
    KeypadMemSubtract,
    KeypadMinus,
    KeypadMultiply,
    KeypadOctal,
    KeypadPercent,
    KeypadPeriod,
    KeypadPlus,
    KeypadPlusMinus,
    KeypadPower,
    KeypadRightBrace,
    KeypadRightParen,
    KeypadSpace,
    KeypadTab,
    KeypadVerticalBar,
    KeypadXor,
    L,
    LAlt,
    LCtrl,
    LGui,
    LShift,
    Left,
    LeftBracket,
    LeftParen,
    LessThan,
    M,
    Mail,
    MediaSelect,
    Menu,
    Minus,
    Mode,
    Mute,
    N,
    Num0,
    Num1,
    Num2,
    Num3,
    Num4,
    Num5,
    Num6,
    Num7,
    Num8,
    Num9,
    NumLock,
    O,
    Oper,
    Out,
    P,
    PageDown,
    PageUp,
    Paste,
    Pause,
    Percent,
    Period,
    Plus,
    Power,
    PrintScreen,
    Prior,
    Q,
    QuestionMark,
    Quote,
    R,
    RAlt,
    RCtrl,
    RGui,
    RShift,
    Right,
    RightBracket,
    RightParen,
    S,
    ScrollLock,
    Select,
    Semicolon,
    Separator,
    Slash,
    Sleep,
    Space,
    Stop,
    SysReq,
    T,
    Tab,
    ThousandsSeparator,
    U,
    Underscore,
    Undo,
    Up,
    V,
    VolumeDown,
    VolumeUp,
    W,
    Www,
    X,
    Y,
    Z,
}

impl From<SdlKey> for Key {
    fn from(key: SdlKey) -> Key {
        match key {
            SdlKey::A => Key::A,
            SdlKey::AcBack => Key::AcBack,
            SdlKey::AcBookmarks => Key::AcBookmarks,
            SdlKey::AcForward => Key::AcForward,
            SdlKey::AcHome => Key::AcHome,
            SdlKey::AcRefresh => Key::AcRefresh,
            SdlKey::AcSearch => Key::AcSearch,
            SdlKey::AcStop => Key::AcStop,
            SdlKey::Again => Key::Again,
            SdlKey::AltErase => Key::AltErase,
            SdlKey::Ampersand => Key::Ampersand,
            SdlKey::Application => Key::Application,
            SdlKey::Asterisk => Key::Asterisk,
            SdlKey::At => Key::At,
            SdlKey::AudioMute => Key::AudioMute,
            SdlKey::AudioNext => Key::AudioNext,
            SdlKey::AudioPlay => Key::AudioPlay,
            SdlKey::AudioPrev => Key::AudioPrev,
            SdlKey::AudioStop => Key::AudioStop,
            SdlKey::B => Key::B,
            SdlKey::Backquote => Key::Backquote,
            SdlKey::Backslash => Key::Backslash,
            SdlKey::Backspace => Key::Backspace,
            SdlKey::BrightnessDown => Key::BrightnessDown,
            SdlKey::BrightnessUp => Key::BrightnessUp,
            SdlKey::C => Key::C,
            SdlKey::Calculator => Key::Calculator,
            SdlKey::Cancel => Key::Cancel,
            SdlKey::CapsLock => Key::CapsLock,
            SdlKey::Caret => Key::Caret,
            SdlKey::Clear => Key::Clear,
            SdlKey::ClearAgain => Key::ClearAgain,
            SdlKey::Colon => Key::Colon,
            SdlKey::Comma => Key::Comma,
            SdlKey::Computer => Key::Computer,
            SdlKey::Copy => Key::Copy,
            SdlKey::CrSel => Key::CrSel,
            SdlKey::CurrencySubUnit => Key::CurrencySubUnit,
            SdlKey::CurrencyUnit => Key::CurrencyUnit,
            SdlKey::Cut => Key::Cut,
            SdlKey::D => Key::D,
            SdlKey::DecimalSeparator => Key::DecimalSeparator,
            SdlKey::Delete => Key::Delete,
            SdlKey::DisplaySwitch => Key::DisplaySwitch,
            SdlKey::Dollar => Key::Dollar,
            SdlKey::Quotedbl => Key::DoubleQuote,
            SdlKey::Down => Key::Down,
            SdlKey::E => Key::E,
            SdlKey::Eject => Key::Eject,
            SdlKey::End => Key::End,
            SdlKey::Return => Key::Enter,
            SdlKey::Return2 => Key::Enter2,
            SdlKey::Equals => Key::Equals,
            SdlKey::Escape => Key::Escape,
            SdlKey::ExSel => Key::ExSel,
            SdlKey::Exclaim => Key::ExclamationMark,
            SdlKey::Execute => Key::Execute,
            SdlKey::F => Key::F,
            SdlKey::F1 => Key::F1,
            SdlKey::F10 => Key::F10,
            SdlKey::F11 => Key::F11,
            SdlKey::F12 => Key::F12,
            SdlKey::F13 => Key::F13,
            SdlKey::F14 => Key::F14,
            SdlKey::F15 => Key::F15,
            SdlKey::F16 => Key::F16,
            SdlKey::F17 => Key::F17,
            SdlKey::F18 => Key::F18,
            SdlKey::F19 => Key::F19,
            SdlKey::F2 => Key::F2,
            SdlKey::F20 => Key::F20,
            SdlKey::F21 => Key::F21,
            SdlKey::F22 => Key::F22,
            SdlKey::F23 => Key::F23,
            SdlKey::F24 => Key::F24,
            SdlKey::F3 => Key::F3,
            SdlKey::F4 => Key::F4,
            SdlKey::F5 => Key::F5,
            SdlKey::F6 => Key::F6,
            SdlKey::F7 => Key::F7,
            SdlKey::F8 => Key::F8,
            SdlKey::F9 => Key::F9,
            SdlKey::Find => Key::Find,
            SdlKey::G => Key::G,
            SdlKey::Greater => Key::GreaterThan,
            SdlKey::H => Key::H,
            SdlKey::Hash => Key::Hash,
            SdlKey::Help => Key::Help,
            SdlKey::Home => Key::Home,
            SdlKey::I => Key::I,
            SdlKey::KbdIllumDown => Key::IllumDown,
            SdlKey::KbdIllumToggle => Key::IllumToggle,
            SdlKey::KbdIllumUp => Key::IllumUp,
            SdlKey::Insert => Key::Insert,
            SdlKey::J => Key::J,
            SdlKey::K => Key::K,
            SdlKey::Kp0 => Key::Keypad0,
            SdlKey::Kp00 => Key::Keypad00,
            SdlKey::Kp000 => Key::Keypad000,
            SdlKey::Kp1 => Key::Keypad1,
            SdlKey::Kp2 => Key::Keypad2,
            SdlKey::Kp3 => Key::Keypad3,
            SdlKey::Kp4 => Key::Keypad4,
            SdlKey::Kp5 => Key::Keypad5,
            SdlKey::Kp6 => Key::Keypad6,
            SdlKey::Kp7 => Key::Keypad7,
            SdlKey::Kp8 => Key::Keypad8,
            SdlKey::Kp9 => Key::Keypad9,
            SdlKey::KpA => Key::KeypadA,
            SdlKey::KpAmpersand => Key::KeypadAmpersand,
            SdlKey::KpAt => Key::KeypadAt,
            SdlKey::KpB => Key::KeypadB,
            SdlKey::KpBackspace => Key::KeypadBackspace,
            SdlKey::KpBinary => Key::KeypadBinary,
            SdlKey::KpC => Key::KeypadC,
            SdlKey::KpClear => Key::KeypadClear,
            SdlKey::KpClearEntry => Key::KeypadClearEntry,
            SdlKey::KpColon => Key::KeypadColon,
            SdlKey::KpComma => Key::KeypadComma,
            SdlKey::KpD => Key::KeypadD,
            SdlKey::KpDecimal => Key::KeypadDecimal,
            SdlKey::KpDivide => Key::KeypadDivide,
            SdlKey::KpDblAmpersand => Key::KeypadDoubleAmpersand,
            SdlKey::KpDblVerticalBar => Key::KeypadDoubleVerticalBar,
            SdlKey::KpE => Key::KeypadE,
            SdlKey::KpEnter => Key::KeypadEnter,
            SdlKey::KpEquals => Key::KeypadEquals,
            SdlKey::KpEqualsAS400 => Key::KeypadEqualsAS400,
            SdlKey::KpExclam => Key::KeypadExclamationMark,
            SdlKey::KpF => Key::KeypadF,
            SdlKey::KpGreater => Key::KeypadGreater,
            SdlKey::KpHash => Key::KeypadHash,
            SdlKey::KpHexadecimal => Key::KeypadHexadecimal,
            SdlKey::KpLeftBrace => Key::KeypadLeftBrace,
            SdlKey::KpLeftParen => Key::KeypadLeftParen,
            SdlKey::KpLess => Key::KeypadLess,
            SdlKey::KpMemAdd => Key::KeypadMemAdd,
            SdlKey::KpMemClear => Key::KeypadMemClear,
            SdlKey::KpMemDivide => Key::KeypadMemDivide,
            SdlKey::KpMemMultiply => Key::KeypadMemMultiply,
            SdlKey::KpMemRecall => Key::KeypadMemRecall,
            SdlKey::KpMemStore => Key::KeypadMemStore,
            SdlKey::KpMemSubtract => Key::KeypadMemSubtract,
            SdlKey::KpMinus => Key::KeypadMinus,
            SdlKey::KpMultiply => Key::KeypadMultiply,
            SdlKey::KpOctal => Key::KeypadOctal,
            SdlKey::KpPercent => Key::KeypadPercent,
            SdlKey::KpPeriod => Key::KeypadPeriod,
            SdlKey::KpPlus => Key::KeypadPlus,
            SdlKey::KpPlusMinus => Key::KeypadPlusMinus,
            SdlKey::KpPower => Key::KeypadPower,
            SdlKey::KpRightBrace => Key::KeypadRightBrace,
            SdlKey::KpRightParen => Key::KeypadRightParen,
            SdlKey::KpSpace => Key::KeypadSpace,
            SdlKey::KpTab => Key::KeypadTab,
            SdlKey::KpVerticalBar => Key::KeypadVerticalBar,
            SdlKey::KpXor => Key::KeypadXor,
            SdlKey::L => Key::L,
            SdlKey::LAlt => Key::LAlt,
            SdlKey::LCtrl => Key::LCtrl,
            SdlKey::LGui => Key::LGui,
            SdlKey::LShift => Key::LShift,
            SdlKey::Left => Key::Left,
            SdlKey::LeftBracket => Key::LeftBracket,
            SdlKey::LeftParen => Key::LeftParen,
            SdlKey::Less => Key::LessThan,
            SdlKey::M => Key::M,
            SdlKey::Mail => Key::Mail,
            SdlKey::MediaSelect => Key::MediaSelect,
            SdlKey::Menu => Key::Menu,
            SdlKey::Minus => Key::Minus,
            SdlKey::Mode => Key::Mode,
            SdlKey::Mute => Key::Mute,
            SdlKey::N => Key::N,
            SdlKey::Num0 => Key::Num0,
            SdlKey::Num1 => Key::Num1,
            SdlKey::Num2 => Key::Num2,
            SdlKey::Num3 => Key::Num3,
            SdlKey::Num4 => Key::Num4,
            SdlKey::Num5 => Key::Num5,
            SdlKey::Num6 => Key::Num6,
            SdlKey::Num7 => Key::Num7,
            SdlKey::Num8 => Key::Num8,
            SdlKey::Num9 => Key::Num9,
            SdlKey::NumLockClear => Key::NumLock,
            SdlKey::O => Key::O,
            SdlKey::Oper => Key::Oper,
            SdlKey::Out => Key::Out,
            SdlKey::P => Key::P,
            SdlKey::PageDown => Key::PageDown,
            SdlKey::PageUp => Key::PageUp,
            SdlKey::Paste => Key::Paste,
            SdlKey::Pause => Key::Pause,
            SdlKey::Percent => Key::Percent,
            SdlKey::Period => Key::Period,
            SdlKey::Plus => Key::Plus,
            SdlKey::Power => Key::Power,
            SdlKey::PrintScreen => Key::PrintScreen,
            SdlKey::Prior => Key::Prior,
            SdlKey::Q => Key::Q,
            SdlKey::Question => Key::QuestionMark,
            SdlKey::Quote => Key::Quote,
            SdlKey::R => Key::R,
            SdlKey::RAlt => Key::RAlt,
            SdlKey::RCtrl => Key::RCtrl,
            SdlKey::RGui => Key::RGui,
            SdlKey::RShift => Key::RShift,
            SdlKey::Right => Key::Right,
            SdlKey::RightBracket => Key::RightBracket,
            SdlKey::RightParen => Key::RightParen,
            SdlKey::S => Key::S,
            SdlKey::ScrollLock => Key::ScrollLock,
            SdlKey::Select => Key::Select,
            SdlKey::Semicolon => Key::Semicolon,
            SdlKey::Separator => Key::Separator,
            SdlKey::Slash => Key::Slash,
            SdlKey::Sleep => Key::Sleep,
            SdlKey::Space => Key::Space,
            SdlKey::Stop => Key::Stop,
            SdlKey::Sysreq => Key::SysReq,
            SdlKey::T => Key::T,
            SdlKey::Tab => Key::Tab,
            SdlKey::ThousandsSeparator => Key::ThousandsSeparator,
            SdlKey::U => Key::U,
            SdlKey::Underscore => Key::Underscore,
            SdlKey::Undo => Key::Undo,
            SdlKey::Up => Key::Up,
            SdlKey::V => Key::V,
            SdlKey::VolumeDown => Key::VolumeDown,
            SdlKey::VolumeUp => Key::VolumeUp,
            SdlKey::W => Key::W,
            SdlKey::Www => Key::Www,
            SdlKey::X => Key::X,
            SdlKey::Y => Key::Y,
            SdlKey::Z => Key::Z,
        }
    }
}

/// A button on a player's mouse.
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
#[allow(missing_docs)]
pub enum MouseButton {
    Left,
    Middle,
    Right,
    X1,
    X2,
}

impl MouseButton {
    pub(crate) fn from_sdl(button: SdlMouseButton) -> Option<MouseButton> {
        match button {
            SdlMouseButton::Left => Some(MouseButton::Left),
            SdlMouseButton::Middle => Some(MouseButton::Middle),
            SdlMouseButton::Right => Some(MouseButton::Right),
            SdlMouseButton::X1 => Some(MouseButton::X1),
            SdlMouseButton::X2 => Some(MouseButton::X2),

            // We don't map the `Unknown` variant, as it's kinda useless - there's no way
            // to actually get the mouse button number from it in the SDL crate.
            _ => None,
        }
    }
}

/// A button on a player's gamepad.
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
#[allow(missing_docs)]
pub enum GamepadButton {
    A,
    B,
    X,
    Y,
    Up,
    Down,
    Left,
    Right,
    LeftShoulder,
    LeftTrigger,
    LeftStick,
    RightShoulder,
    RightTrigger,
    RightStick,
    Start,
    Back,
    Guide,
}

impl From<SdlButton> for GamepadButton {
    fn from(button: SdlButton) -> GamepadButton {
        match button {
            SdlButton::A => GamepadButton::A,
            SdlButton::B => GamepadButton::B,
            SdlButton::X => GamepadButton::X,
            SdlButton::Y => GamepadButton::Y,
            SdlButton::DPadUp => GamepadButton::Up,
            SdlButton::DPadDown => GamepadButton::Down,
            SdlButton::DPadLeft => GamepadButton::Left,
            SdlButton::DPadRight => GamepadButton::Right,
            SdlButton::LeftShoulder => GamepadButton::LeftShoulder,
            SdlButton::LeftStick => GamepadButton::LeftStick,
            SdlButton::RightShoulder => GamepadButton::RightShoulder,
            SdlButton::RightStick => GamepadButton::RightStick,
            SdlButton::Start => GamepadButton::Start,
            SdlButton::Back => GamepadButton::Back,
            SdlButton::Guide => GamepadButton::Guide,
        }
    }
}

/// An axis on a player's gamepad.
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
#[allow(missing_docs)]
pub enum GamepadAxis {
    LeftStickX,
    LeftStickY,
    LeftTrigger,
    RightStickX,
    RightStickY,
    RightTrigger,
}

impl From<GamepadAxis> for SdlAxis {
    fn from(axis: GamepadAxis) -> SdlAxis {
        match axis {
            GamepadAxis::LeftStickX => SdlAxis::LeftX,
            GamepadAxis::LeftStickY => SdlAxis::LeftY,
            GamepadAxis::LeftTrigger => SdlAxis::TriggerLeft,
            GamepadAxis::RightStickX => SdlAxis::RightX,
            GamepadAxis::RightStickY => SdlAxis::RightY,
            GamepadAxis::RightTrigger => SdlAxis::TriggerRight,
        }
    }
}

impl From<SdlAxis> for GamepadAxis {
    fn from(axis: SdlAxis) -> GamepadAxis {
        match axis {
            SdlAxis::LeftX => GamepadAxis::LeftStickX,
            SdlAxis::LeftY => GamepadAxis::LeftStickY,
            SdlAxis::TriggerLeft => GamepadAxis::LeftTrigger,
            SdlAxis::RightX => GamepadAxis::RightStickX,
            SdlAxis::RightY => GamepadAxis::RightStickY,
            SdlAxis::TriggerRight => GamepadAxis::RightTrigger,
        }
    }
}

/// A control stick on a player's gamepad.
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
#[allow(missing_docs)]
pub enum GamepadStick {
    LeftStick,
    RightStick,
}
